apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ template "env.app_name" . }}-ingress-https
  labels:
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.class | default "nginx" }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/custom-http-errors: "502,503"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "16"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRuleRemoveById 949110
    {{- if eq .Values.saas.expired false }}
    nginx.ingress.kubernetes.io/default-backend: {{ .Values.saas.error_page }}-error-page
    {{- else }}
    nginx.ingress.kubernetes.io/default-backend: {{ .Values.saas.expired_page }}
    {{- end }}
spec:
  tls:
    - hosts:   
      - "{{ template "platform.host" . }}"
      secretName: {{ .Values.ingress.cert | default "wildcard-saas-tls" }}
  rules:
  - host: {{ template "platform.host" . }}
    http:
      paths:
      - backend:
          {{- if eq .Values.saas.expired false }}
          serviceName: "{{ template "env.app_name" . }}-{{ .Values.platform.service.name }}"
          {{- else }}
          serviceName: {{ .Values.saas.expired_page }}
          {{- end }} 
          servicePort: {{ .Values.platform.service.externalPort }}
        path: /